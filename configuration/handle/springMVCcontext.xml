<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"

        xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
 		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!-- 静态资源请求被拦截解决方法一		
	<mvc:default-servlet-handler/>
	<mvc:resources location="/images/" mapping="/images/**"/>
	 -->
<!-- —————————————————————————————————视图解析器———————————————————————————————————————————————— -->	 
	<!-- BeanNameViewResolver视图解析器分两种
		 JstlView用于定义内部视图资源对象，redirectView用于定义外部视图资源对象 
		 使用JstlView时需要引入jstl的jar包
	<bean id="internalUrl" class="org.springframework.web.servlet.view.JstlView">
		<property name="url" value="/WEB-INF/welcome.jsp"/>
	</bean>
	<bean id="taobao" class="org.springframework.web.servlet.view.RedirectView">
		<property name="url" value="http://www.taobao.com"/>
	</bean>
	<bean id="jd" class="org.springframework.web.servlet.view.RedirectView">
		<property name="url" value="http://www.jd.com"/>
	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>-->
	
	<!-- 视图解析器的优先级：在未被赋予优先级或同优先级的情况下，先注册的解析器先被调用；在被赋予优先级的情况下
	，优先级高的解析器先被调用，order值越低优先级越高 -->
	
	<!-- 使用XmlViewResolver视图解析器可以另外配置注册视图资源对象，解决BeanNameViewResolver会使配置文件
	          臃肿的毛病 -->
	<bean class ="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="location" value="classpath:myViews.xml"/>
		<property name="order" value="3"/>
	</bean>
	
	<!-- 使用ResourceBundleViewResolver视图解析器也可以另外配置注册视图资源对象，解决BeanNameViewResolver
		  会使配置文件臃肿的毛病 
		 注：properties文件无需指定路径和文件格式-->
	<bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="basename" value="myView"/>
		<property name="order" value="3"/>
	</bean>
	
	<!-- 
		视图解析器：以下为servlet转发的资源名配上前置路径和后置文件格式
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	 -->
<!-- —————————————————————————————————处理器映射———————————————————————————————————————————————— -->	 
	<!--
		默认使用BeanNameUrlHandlerMapper：一个资源请求对应一个处理器对象
		当多个资源 请求对应一个处理器对象时，使用SimpleUrlHandlerMapper 
	 -->
	 <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<!--属性设置 -->
		 <property name="mappings">
			<props>
				<!-- 配置默认的方法名解析器时 
				<prop key="/hello/*.do">myControler</prop>-->
				<!-- 配置属性配置方法名解析器时
				<prop key="/hello_*.do">myControler</prop> -->
				<!-- 配置参数方法名解析器时 -->
				<prop key="/hello.do">myControler</prop>
				<prop key="/world.do">myControler</prop>
			</props>
		</property>
		
		<!--键值对设置 
		<property name="urlMap">
			<map>
				<entry key="/hello/*.do" value-ref="myControler"/>
				<entry key="/world.do" value-ref="myControler"/>
			</map>
		</property> -->
	 </bean>  
	 
	 <!-- 属性配置方法名解析器
	 <bean id="propertiesMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
	 	<property name="mappings">
	 		<props>
	 			<prop key="/hello_doFirst.do">doFirst</prop>
	 		</props>
	 	</property>
	 </bean> -->
	 
	 <!-- 参数方法名解析器 ，若不设置，默认参数名为action，
	 		 url格式：http://localhost:8080/SpringMVC/hello.do?methodIs=doFirst
	 <bean id="parameterMethodNameResolver" class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
	 	<property name="paramName" value="methodIs"/>
	 </bean> -->
	 
	<!-- 注册处理器：其中若有匹配资源名称，必须以'/'开头 -->
	<bean id="myControler" class="handle.myControler"/>
	<!-- 默认的方法名解析器不需配置,只需用资源名称做id -->
		<!-- 继承了abstractControler的处理器可以限制请求方式 ：以下get方式无法得到响应
		<property name="supportedMethods" value="post"/>-->
		<!-- 配置属性配置方法名解析器
		<property name="methodNameResolver" ref="propertiesMethodNameResolver"/> -->
		<!-- 配置参数方法名解析器
		<property name="methodNameResolver" ref="parameterMethodNameResolver"/>	
	</bean> -->
		
</beans>
